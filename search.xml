<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>comment-app</title>
      <link href="/2022/05/15/comment-app/"/>
      <url>/2022/05/15/comment-app/</url>
      
        <content type="html"><![CDATA[<h3 id="组件划分"><a href="#组件划分" class="headerlink" title="组件划分"></a>组件划分</h3><p><code>CommentApp</code>：评论功能的整体用一个叫 <code>CommentApp</code> 的组件包含起来。<code>CommentApp</code> 包含上部和下部两部分。</p><p><code>CommentInput</code>：上面部分是负责用户输入可操作的输入区域，包括输入评论的用户名、评论内容和发布按钮，这一部分功能划分到一个单独的组件 <code>CommentInput</code> 中。</p><p><code>CommentList</code>：下面部分是评论列表，用一个叫 <code>CommentList</code> 的组件负责列表的展示。</p><p><code>Comment</code>：每个评论列表项由独立的组件 <code>Comment</code> 负责显示，这个组件被 <code>CommentList</code> 所使用。</p><p>所以这个评论功能划分成四种组件，<code>CommentApp</code>、<code>CommentInput</code>、<code>CommentList</code>、<code>Comment</code>。</p><p><img src="https://s3.bmp.ovh/imgs/2022/05/16/fee3b8eb8c7a6628.png"></p><h3 id="组件实现"><a href="#组件实现" class="headerlink" title="组件实现"></a>组件实现</h3><p>首先创建一个新的工程目录：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create-react-app comment</span><br></pre></td></tr></table></figure><p>在<code>/src</code>目录下创建一个<code>components</code>文件夹，该文件用于存储组件，再在该文件夹下创建四个文件。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">src/components</span><br><span class="line">  CommentApp.jsx</span><br><span class="line">  CommentInput.jsx</span><br><span class="line">  CommentList.jsx</span><br><span class="line">  Comment.jsx</span><br></pre></td></tr></table></figure><p>如果一个文件导出的是类，那么这个文件名最好用大写开头。</p><p>先从组件的最顶层开始，进入<code>CommentApp.jsx</code>文件。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import React, &#123; Component &#125; from &#x27;react&#x27;;</span><br><span class="line">import CommentInput from &#x27;./CommentInput&#x27;;</span><br><span class="line">import CommentList from &#x27;./CommentList&#x27;;</span><br><span class="line">class CommentApp extends Component &#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    return (</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;CommentInput /&gt;</span><br><span class="line">        &lt;CommentList /&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">export default CommentApp</span><br></pre></td></tr></table></figure><p>顶部引入<code>CommentInput</code>和<code>CommentList</code>，并将这两个应用在<code>CommentApp</code>返回的JSX结构中。</p><p>接下来修改<code>CommentInput.jsx</code>中的内容：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import React, &#123; Component &#125; from &#x27;react&#x27;</span><br><span class="line"></span><br><span class="line">class CommentInput extends Component &#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    return (</span><br><span class="line">      &lt;div&gt;&lt;/div&gt;</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">export default CommentInput</span><br></pre></td></tr></table></figure><p>同样地修改<code>CommentList.jsx</code>中地内容：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import React, &#123; Component &#125; from &#x27;react&#x27;</span><br><span class="line"></span><br><span class="line">class CommentList extends Component &#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    return (</span><br><span class="line">      &lt;div&gt;&lt;/div&gt;</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">export default CommentList</span><br></pre></td></tr></table></figure><p>渲染到页面上，修改<code>src/index.js</code>文件：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import React from &#x27;react&#x27;;</span><br><span class="line">import ReactDOM from &#x27;react-dom/client&#x27;;</span><br><span class="line">import &#x27;./index.css&#x27;;</span><br><span class="line">import CommentApp from &#x27;./components/CommentApp&#x27;;</span><br><span class="line">const root = ReactDOM.createRoot(document.getElementById(&#x27;root&#x27;));</span><br><span class="line">root.render(</span><br><span class="line">  &lt;React.StrictMode&gt;</span><br><span class="line">    &lt;CommentApp /&gt;</span><br><span class="line">  &lt;/React.StrictMode&gt;</span><br><span class="line">);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在<code>CommentApp</code> 里面的 <code>&lt;div&gt;</code> 添加样式。修改 <code>CommentApp</code> 中的<code>render</code> 方法，给它添加一个 <code>wrapper</code> 类名：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">class CommentApp extends Component &#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    return (</span><br><span class="line">      &lt;div className=&#x27;wrapper&#x27;&gt;</span><br><span class="line">        &lt;CommentInput /&gt;</span><br><span class="line">        &lt;CommentList /&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="CSS文件"><a href="#CSS文件" class="headerlink" title="CSS文件"></a>CSS文件</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: sans-serif;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fbfbfb</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">10px</span> auto;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#f1f1f1</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 评论框样式 */</span></span><br><span class="line"><span class="selector-class">.comment-input</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#f1f1f1</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.comment-field</span> &#123;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.comment-field</span> <span class="selector-class">.comment-field-name</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-basis</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.comment-field</span> <span class="selector-class">.comment-field-input</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.comment-field-input</span> <span class="selector-tag">input</span>,</span><br><span class="line"><span class="selector-class">.comment-field-input</span> <span class="selector-tag">textarea</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#e6e6e6</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">outline</span>: none;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">resize</span>: none;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.comment-field-input</span> <span class="selector-tag">textarea</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.comment-field-button</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: flex-end;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.comment-field-button</span> <span class="selector-tag">button</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">border</span>: none;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#00a3cf</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">outline</span>: none;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.comment-field-button</span> <span class="selector-tag">button</span><span class="selector-pseudo">:active</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#13c1f1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 评论列表样式 */</span></span><br><span class="line"><span class="selector-class">.comment-list</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#f1f1f1</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 评论组件样式 */</span></span><br><span class="line"><span class="selector-class">.comment</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#f1f1f1</span>;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">padding-bottom</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">min-height</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.comment</span> <span class="selector-class">.comment-user</span> &#123;</span><br><span class="line">  <span class="attribute">flex-shrink</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.comment</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#00a3cf</span>;</span><br><span class="line">  <span class="attribute">font-style</span>: italic;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.comment</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="comment">/*text-indent: 2em;*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="处理用户输入"><a href="#处理用户输入" class="headerlink" title="处理用户输入"></a>处理用户输入</h3><p><code>ComponentInput</code> 组件开始，学习 React.js 是如何处理用户输入的。首先修改 <code>ComponentInput.jsx</code>，完善 <code>ComponentInput</code> 的 <code>render</code> 函数中的 HTML 结构：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line"> render () &#123;</span><br><span class="line">    return (</span><br><span class="line">      &lt;div className=&#x27;comment-input&#x27;&gt;</span><br><span class="line">        &lt;div className=&#x27;comment-field&#x27;&gt;</span><br><span class="line">          &lt;span className=&#x27;comment-field-name&#x27;&gt;用户名：&lt;/span&gt;</span><br><span class="line">          &lt;div className=&#x27;comment-field-input&#x27;&gt;</span><br><span class="line">            &lt;input /&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div className=&#x27;comment-field&#x27;&gt;</span><br><span class="line">          &lt;span className=&#x27;comment-field-name&#x27;&gt;评论内容：&lt;/span&gt;</span><br><span class="line">          &lt;div className=&#x27;comment-field-input&#x27;&gt;</span><br><span class="line">            &lt;textarea /&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div className=&#x27;comment-field-button&#x27;&gt;</span><br><span class="line">          &lt;button&gt;</span><br><span class="line">            发布</span><br><span class="line">          &lt;/button&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>用户可输入内容一个是用户名（username），一个是评论内容（content），在组件中用<code>state</code>保存这两个状态：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">state = &#123;</span><br><span class="line">        username: &#x27;&#x27;,</span><br><span class="line">        content: &#x27;&#x27;,</span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure><p>然后给输入框设置 <code>value</code> 属性，让它们的 <code>value</code> 值等于 <code>this.state</code> 里面相应的值：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">        &lt;div className=&#x27;comment-field&#x27;&gt;</span><br><span class="line">          &lt;span className=&#x27;comment-field-name&#x27;&gt;用户名：&lt;/span&gt;</span><br><span class="line">          &lt;div className=&#x27;comment-field-input&#x27;&gt;</span><br><span class="line">            &lt;input value=&#123;this.state.username&#125; /&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div className=&#x27;comment-field&#x27;&gt;</span><br><span class="line">          &lt;span className=&#x27;comment-field-name&#x27;&gt;评论内容：&lt;/span&gt;</span><br><span class="line">          &lt;div className=&#x27;comment-field-input&#x27;&gt;</span><br><span class="line">            &lt;textarea value=&#123;this.state.content&#125; /&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>光这样并不能在<code>input</code>和<code>textarea</code>中输入，在 <code>React.js </code>当中必须要用 <code>setState</code> 才能更新组件的内容，所以我们需要做的就是：监听输入框的 <code>onChange</code> 事件，然后获取到用户输入的内容，再通过 <code>setState</code> 的方式更新 <code>state</code> 中的 <code>username</code>，这样 <code>input</code> 的内容才会更新。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">handleUsernameChange (event) &#123;</span><br><span class="line">    this.setState(&#123;</span><br><span class="line">      username: event.target.value</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">...</span><br><span class="line">    &lt;div className=&#x27;comment-field-input&#x27;&gt;</span><br><span class="line">      &lt;input</span><br><span class="line">        value=&#123;this.state.username&#125;</span><br><span class="line">        onChange=&#123;this.handleUsernameChange.bind(this)&#125; /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>通过 <code>event.target.value</code> 获取 <code>&lt;input /&gt;</code> 中用户输入的内容，然后通过 <code>setState</code> 把它设置到 <code>state.username</code> 当中，这时候组件的内容就会更新，<code>input</code> 的 <code>value</code> 值就会得到更新并显示到输入框内。</p><p>类似于 <code>&lt;input /&gt;</code>、<code>&lt;select /&gt;</code>、<code>&lt;textarea&gt;</code> 这些元素的 <code>value</code> 值被 React.js 所控制、渲染的组件，在 React.js 当中被称为受控组件（Controlled Component）。对于用户可输入的控件，一般都可以让它们成为受控组件，这是 React.js 所推崇的做法。</p><p>同样地，让 <code>&lt;textarea /&gt;</code> 成为受控组件：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">  handleContentChange (event) &#123;</span><br><span class="line">    this.setState(&#123;</span><br><span class="line">      content: event.target.value</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">...</span><br><span class="line">      &lt;div className=&#x27;comment-field&#x27;&gt;</span><br><span class="line">        &lt;span className=&#x27;comment-field-name&#x27;&gt;评论内容：&lt;/span&gt;</span><br><span class="line">        &lt;div className=&#x27;comment-field-input&#x27;&gt;</span><br><span class="line">          &lt;textarea</span><br><span class="line">            value=&#123;this.state.content&#125;</span><br><span class="line">            onChange=&#123;this.handleContentChange.bind(this)&#125; /&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="向父组件传递数据"><a href="#向父组件传递数据" class="headerlink" title="向父组件传递数据"></a>向父组件传递数据</h3><p>当用户在 <code>CommentInput</code> 里面输入完内容以后，点击发布，内容其实是需要显示到 <code>CommentList</code> 组件当中的。</p><p><code>CommentApp</code> 组件将 <code>CommentInput</code> 和 <code>CommentList</code> 组合起来，它是它们俩的父组件，可以充当桥接两个子组件的桥梁。<strong>所以当用户点击发布按钮的时候，我们就将 <code>CommentInput</code> 的<code> state</code> 当中最新的评论数据传递给父组件<code>CommentApp</code>，然后让父组件把这个数据传递给 <code>CommentList</code> 进行渲染。</strong></p><p>父组件 <code>CommentApp</code> 只需要通过 <code>props</code> 给子组件 <code>CommentInput</code> 传入一个回调函数。当用户点击发布按钮的时候，<code>CommentInput</code> 调用 <code>props</code> 中的回调函数并且将 <code>state</code> 传入该函数即可。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">  handleSubmit () &#123;</span><br><span class="line">    if (this.props.onSubmit) &#123;</span><br><span class="line">      const &#123; username, content &#125; = this.state</span><br><span class="line">      this.props.onSubmit(&#123;username, content&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    this.setState(&#123; content: &#x27;&#x27; &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">...</span><br><span class="line">&lt;div className=&#x27;comment-field-button&#x27;&gt;</span><br><span class="line">        &lt;button</span><br><span class="line">          onClick=&#123;this.handleSubmit.bind(this)&#125;&gt;</span><br><span class="line">          发布</span><br><span class="line">        &lt;/button&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p><code>handleSubmit</code> 方法会判断 <code>props</code> 中是否传入了 <code>onSubmit</code> 属性。有的话就调用该函数，并且把用户输入的用户名和评论数据传入该函数。然后再通过 <code>setState</code> 清空用户输入的评论内容。</p><p>修改 <code>CommentApp.js</code> ，让它可以通过传入回调来获取到新增评论数据：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class CommentApp extends Component &#123;</span><br><span class="line">  handleSubmitComment (comment) &#123;</span><br><span class="line">    console.log(comment)</span><br><span class="line">  &#125;</span><br><span class="line">  render() &#123;</span><br><span class="line">    return (</span><br><span class="line">      &lt;div className=&#x27;wrapper&#x27;&gt;</span><br><span class="line">        &lt;CommentInput</span><br><span class="line">          onSubmit=&#123;this.handleSubmitComment.bind(this)&#125; /&gt;</span><br><span class="line">        &lt;CommentList /&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 <code>CommentApp</code> 中给 <code>CommentInput</code> 传入一个 <code>onSubmit</code> 属性，这个属性值是 <code>CommentApp</code> 自己的一个方法 <code>handleSubmitComment</code>。这样 <code>CommentInput</code> 就可以调用 <code>this.props.onSubmit(…)</code> 把数据传给 <code>CommenApp</code>。</p><p>修改 <code>CommentList</code> 可以让它可以显示评论列表：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import React, &#123; Component &#125; from &#x27;react&#x27;</span><br><span class="line"></span><br><span class="line">class CommentList extends Component &#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    const comments = [</span><br><span class="line">      &#123;username: &#x27;Jerry&#x27;, content: &#x27;Hello&#x27;&#125;,</span><br><span class="line">      &#123;username: &#x27;Tomy&#x27;, content: &#x27;World&#x27;&#125;,</span><br><span class="line">      &#123;username: &#x27;Lucy&#x27;, content: &#x27;Good&#x27;&#125;</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    return (</span><br><span class="line">      &lt;div&gt;&#123;comments.map((comment, i) =&gt; &#123;</span><br><span class="line">        return (</span><br><span class="line">          &lt;div key=&#123;i&#125;&gt;</span><br><span class="line">            &#123;comment.username&#125;：&#123;comment.content&#125;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        )</span><br><span class="line">      &#125;)&#125;&lt;/div&gt;</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">export default CommentList</span><br></pre></td></tr></table></figure><p>修改 <code>Comment.jsx</code> 让它来负责具体每条评论内容的渲染：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import React, &#123; Component &#125; from &#x27;react&#x27;</span><br><span class="line"></span><br><span class="line">class Comment extends Component &#123;</span><br><span class="line">  render () &#123;</span><br><span class="line">    return (</span><br><span class="line">      &lt;div className=&#x27;comment&#x27;&gt;</span><br><span class="line">        &lt;div className=&#x27;comment-user&#x27;&gt;</span><br><span class="line">          &lt;span&gt;&#123;this.props.comment.username&#125; &lt;/span&gt;：</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;p&gt;&#123;this.props.comment.content&#125;&lt;/p&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export default Comment</span><br></pre></td></tr></table></figure><p>负责每条评论的具体显示,只需要给它的 <code>props</code> 中传入一个 <code>comment</code> 对象，它就会把该对象中的 <code>username</code> 和 <code>content</code> 渲染到页面上。</p><p>把 <code>Comment</code> 应用到 <code>CommentList</code> 当中，修改 <code>CommentList.js</code> 代码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import React, &#123; Component &#125; from &#x27;react&#x27;</span><br><span class="line">import Comment from &#x27;./Comment&#x27;</span><br><span class="line"></span><br><span class="line">class CommentList extends Component &#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    const comments = [</span><br><span class="line">      &#123;username: &#x27;Jerry&#x27;, content: &#x27;Hello&#x27;&#125;,</span><br><span class="line">      &#123;username: &#x27;Tomy&#x27;, content: &#x27;World&#x27;&#125;,</span><br><span class="line">      &#123;username: &#x27;Lucy&#x27;, content: &#x27;Good&#x27;&#125;</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    return (</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &#123;comments.map((comment, i) =&gt; &lt;Comment comment=&#123;comment&#125; key=&#123;i&#125; /&gt;)&#125;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export default CommentList</span><br></pre></td></tr></table></figure><p><code>CommentList</code> 的数据应该是由父组件 <code>CommentApp</code> 传进来的，现在我们删除测试数据，改成从 <code>props</code> 获取评论数据：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import React, &#123; Component &#125; from &#x27;react&#x27;</span><br><span class="line">import Comment from &#x27;./Comment&#x27;</span><br><span class="line"></span><br><span class="line">class CommentList extends Component &#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    return (</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &#123;this.props.comments.map((comment, i) =&gt;</span><br><span class="line">          &lt;Comment comment=&#123;comment&#125; key=&#123;i&#125; /&gt;</span><br><span class="line">        )&#125;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export default CommentList</span><br></pre></td></tr></table></figure><p>这样子会发现浏览器报错，原因是<code>CommentApp</code> 使用 <code>CommentList</code> 的时候并没有传入 <code>comments</code>。我们给 <code>CommentList</code> 加上 <code>defaultProps</code> 防止 <code>comments</code> 不传入的情况：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class CommentList extends Component &#123;</span><br><span class="line">  static defaultProps = &#123;</span><br><span class="line">    comments: []</span><br><span class="line">  &#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>这时候代码就不报错了。但是 <code>CommentInput</code> 给 <code>CommentApp</code> 传递的评论数据并没有传递给 <code>CommentList</code>，所以现在发表评论时没有反应的。</p><p>我们在 <code>CommentApp</code> 的 <code>state</code> 中初始化一个数组，来保存所有的评论数据，并且通过 <code>props</code> 把它传递给 <code>CommentList</code>。修改 <code>CommentApp.js</code>：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import React, &#123; Component &#125; from &#x27;react&#x27;</span><br><span class="line">import CommentInput from &#x27;./CommentInput&#x27;</span><br><span class="line">import CommentList from &#x27;./CommentList&#x27;</span><br><span class="line"></span><br><span class="line">class CommentApp extends Component &#123;</span><br><span class="line">  constructor () &#123;</span><br><span class="line">    super()</span><br><span class="line">    this.state = &#123;</span><br><span class="line">      comments: []</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  handleSubmitComment (comment) &#123;</span><br><span class="line">    console.log(comment)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  render() &#123;</span><br><span class="line">    return (</span><br><span class="line">      &lt;div className=&#x27;wrapper&#x27;&gt;</span><br><span class="line">        &lt;CommentInput onSubmit=&#123;this.handleSubmitComment.bind(this)&#125; /&gt;</span><br><span class="line">        &lt;CommentList comments=&#123;this.state.comments&#125;/&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export default CommentApp</span><br></pre></td></tr></table></figure><p>接下来，修改 <code>handleSubmitComment</code> ：每当用户发布评论的时候，就把评论数据插入 <code>this.state.comments</code> 中，然后通过 <code>setState</code> 把数据更新到页面上：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">  handleSubmitComment (comment) &#123;</span><br><span class="line">    this.state.comments.push(comment)</span><br><span class="line">    this.setState(&#123;</span><br><span class="line">      comments: this.state.comments</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>为了让代码的健壮性更强，给 <code>handleSubmitComment</code> 加入简单的数据检查：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">  handleSubmitComment (comment) &#123;</span><br><span class="line">    if (!comment) return</span><br><span class="line">    if (!comment.username) return alert(&#x27;请输入用户名&#x27;)</span><br><span class="line">    if (!comment.content) return alert(&#x27;请输入评论内容&#x27;)</span><br><span class="line">    this.state.comments.push(comment)</span><br><span class="line">    this.setState(&#123;</span><br><span class="line">      comments: this.state.comments</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ol><li>实现功能之前先理解、分析需求，划分组件。并且掌握划分组件的基本原则——可复用性、可维护性。</li><li>受控组件的概念，React.js 中的 <code>&lt;input /&gt;</code> 、<code>&lt;textarea /&gt;</code>、<code>&lt;select /&gt;</code> 等元素的 <code>value</code> 值如果是受到 React.js 的控制，那么就是受控组件。</li><li>组件之间使用 <code>props</code> 通过父元素传递数据的技巧。</li></ol><blockquote><p>参考React.js 小书</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
            <tag> css </tag>
            
            <tag> javascript </tag>
            
            <tag> react </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>拳皇项目</title>
      <link href="/2022/05/12/%E6%8B%B3%E7%9A%87%E9%A1%B9%E7%9B%AE/"/>
      <url>/2022/05/12/%E6%8B%B3%E7%9A%87%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<h3 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h3><p><img src="https://s3.bmp.ovh/imgs/2022/05/11/2c7a134a4b689c88.png"></p><p><code>css</code>：存放项目css文件</p><p><code>images</code>：存放项目图片</p><p><code>js</code>：存放项目js文件</p><p><code>templates</code>：存放所有html文件</p><h3 id="HTML内容"><a href="#HTML内容" class="headerlink" title="HTML内容"></a>HTML内容</h3><p>html内容很简单，主要就一个div:smile:</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>拳皇<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/static/css/base.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.acwing.com/static/jquery/js/jquery-3.3.1.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;kof&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;module&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">import</span> &#123;<span class="variable constant_">KOF</span>&#125; <span class="keyword">from</span> <span class="string">&#x27;/static/js/base.js&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> kof = <span class="keyword">new</span> <span class="title function_">KOF</span>(<span class="string">&#x27;kof&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="游戏引擎实现"><a href="#游戏引擎实现" class="headerlink" title="游戏引擎实现"></a>游戏引擎实现</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable constant_">AC_GAME_OBJECTS</span> = [];<span class="comment">// 存放对象所有元素</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AcGameObject</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable constant_">AC_GAME_OBJECTS</span>.<span class="title function_">push</span>(<span class="variable language_">this</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">timedelta</span> = <span class="number">0</span>; <span class="comment">// 当前帧距离上一帧的时间间隔</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">has_call_start</span> = <span class="literal">false</span>; <span class="comment">// 判断当前对象有没有执行过</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">start</span>(<span class="params"></span>) &#123;  <span class="comment">// 初始执行一次</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">update</span>(<span class="params"></span>) &#123;  <span class="comment">// 每一帧执行一次（第一帧除外）</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">destroy</span>(<span class="params"></span>) &#123;  <span class="comment">//删除当前对象</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">in</span> <span class="variable constant_">AC_GAME_OBJECTS</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable constant_">AC_GAME_OBJECTS</span>[i] === <span class="variable language_">this</span>) &#123;</span><br><span class="line">                <span class="variable constant_">AC_GAME_OBJECTS</span>.<span class="title function_">splice</span>(i, <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> last_timestamp; <span class="comment">// 上一帧</span></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">AC_GAME_OBJECTS_FRAME</span> = (<span class="params">timestamp</span>) =&gt; &#123; </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> obj <span class="keyword">of</span> <span class="variable constant_">AC_GAME_OBJECTS</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!obj.<span class="property">has_call_start</span>) &#123; <span class="comment">// 如果没有执行过就先执行一次</span></span><br><span class="line">            obj.<span class="title function_">start</span>();</span><br><span class="line">            obj.<span class="property">has_call_start</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            obj.<span class="property">timedelta</span> = timestamp - last_timestamp;<span class="comment">// 更新时间戳</span></span><br><span class="line">            obj.<span class="title function_">update</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    last_timestamp = timestamp;<span class="comment">// 更新上一帧</span></span><br><span class="line">    <span class="title function_">requestAnimationFrame</span>(<span class="variable constant_">AC_GAME_OBJECTS_FRAME</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="title function_">requestAnimationFrame</span>(<span class="variable constant_">AC_GAME_OBJECTS_FRAME</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123;</span><br><span class="line">    <span class="title class_">AcGameObject</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="项目主类"><a href="#项目主类" class="headerlink" title="项目主类"></a>项目主类</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">KOF</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">id</span>) &#123;</span><br><span class="line">        <span class="comment">//索引div  jquery选择器</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$kof</span> = $(<span class="string">&#x27;#&#x27;</span> + id);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">game_map</span> = <span class="keyword">new</span> <span class="title class_">GameMap</span>(<span class="variable language_">this</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">players</span> = [</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Kyo</span>(<span class="variable language_">this</span>, &#123;</span><br><span class="line">                <span class="attr">id</span>: <span class="number">0</span>,</span><br><span class="line">                <span class="attr">x</span>: <span class="number">200</span>,</span><br><span class="line">                <span class="attr">y</span>: <span class="number">0</span>,</span><br><span class="line">                <span class="attr">width</span>: <span class="number">120</span>,</span><br><span class="line">                <span class="attr">height</span>: <span class="number">200</span>,</span><br><span class="line">                <span class="attr">color</span>: <span class="string">&quot;blue&quot;</span>,</span><br><span class="line">            &#125;),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Kyo</span>(<span class="variable language_">this</span>, &#123;</span><br><span class="line">                <span class="attr">id</span>: <span class="number">1</span>,</span><br><span class="line">                <span class="attr">x</span>: <span class="number">900</span>,</span><br><span class="line">                <span class="attr">y</span>: <span class="number">0</span>,</span><br><span class="line">                <span class="attr">width</span>: <span class="number">120</span>,</span><br><span class="line">                <span class="attr">height</span>: <span class="number">200</span>,</span><br><span class="line">                <span class="attr">color</span>: <span class="string">&quot;red&quot;</span>,</span><br><span class="line">            &#125;)</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="地图类game-map实现"><a href="#地图类game-map实现" class="headerlink" title="地图类game_map实现"></a>地图类game_map实现</h3><h4 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">constructor</span>(<span class="params">root</span>) &#123;</span><br><span class="line">        <span class="variable language_">super</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">root</span> = root;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$canvas</span> = $(<span class="string">&#x27;&lt;canvas width=&quot;1280&quot; height=&quot;720&quot; tabindex=0&gt;&lt;/canvas&gt;&#x27;</span>); <span class="comment">//tabindex=0的作用是让canvas可以聚焦</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span> = <span class="variable language_">this</span>.<span class="property">$canvas</span>[<span class="number">0</span>].<span class="title function_">getContext</span>(<span class="string">&#x27;2d&#x27;</span>);<span class="comment">// jquery中的canvas是个数组</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">root</span>.<span class="property">$kof</span>.<span class="title function_">append</span>(<span class="variable language_">this</span>.<span class="property">$canvas</span>); <span class="comment">//将canvas加到div中</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$canvas</span>.<span class="title function_">focus</span>(); <span class="comment">// 键盘的字符能够输入的地方就是聚焦的地方</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">controller</span> = <span class="keyword">new</span> <span class="title class_">Controller</span>(<span class="variable language_">this</span>.<span class="property">$canvas</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">root</span>.<span class="property">$kof</span>.<span class="title function_">append</span>($(<span class="string">`</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;kof-head&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;kof-head-hp-0&quot;&gt;&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;kof-head-timer&quot;&gt;60&lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;kof-head-hp-1&quot;&gt;&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;    </span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">        `</span>));</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">time_left</span> = <span class="number">60000</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$time</span> = <span class="variable language_">this</span>.<span class="property">root</span>.<span class="property">$kof</span>.<span class="title function_">find</span>(<span class="string">`.kof-head-timer`</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="渲染函数"><a href="#渲染函数" class="headerlink" title="渲染函数"></a>渲染函数</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="title function_">clearRect</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="property">canvas</span>.<span class="property">width</span>, <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="property">canvas</span>.<span class="property">height</span>); <span class="comment">//每一帧清空一次地图</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="实现血条和计时器"><a href="#实现血条和计时器" class="headerlink" title="实现血条和计时器"></a>实现血条和计时器</h4><h5 id="css样式"><a href="#css样式" class="headerlink" title="css样式"></a>css样式</h5><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#kof</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">1280px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">720px</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;/static/images/background/background.gif&quot;</span>);</span><br><span class="line">    <span class="attribute">background-size</span>: <span class="number">100%</span> <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background-position</span>: top;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#kof</span>&gt;<span class="selector-class">.kof-head</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">80px</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#kof</span>&gt;<span class="selector-class">.kof-head</span>&gt;<span class="selector-class">.kof-head-hp-0</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="built_in">calc</span>(<span class="number">50%</span> - <span class="number">60px</span>);</span><br><span class="line">  </span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">border</span>: white <span class="number">5px</span> solid;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">    <span class="attribute">border-right</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#kof</span>&gt;<span class="selector-class">.kof-head</span>&gt;<span class="selector-class">.kof-head-hp-1</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="built_in">calc</span>(<span class="number">50%</span> - <span class="number">60px</span>);</span><br><span class="line"></span><br><span class="line">    <span class="attribute">border</span>: white <span class="number">5px</span> solid;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">    <span class="attribute">border-left</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#kof</span>&gt;<span class="selector-class">.kof-head</span>&gt;<span class="selector-class">.kof-head-timer</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">80px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: orange;</span><br><span class="line">    <span class="attribute">border</span>: white <span class="number">5px</span> solid;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">800</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">50px</span>;</span><br><span class="line">    user-select: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#kof</span>&gt;<span class="selector-class">.kof-head</span>&gt;<span class="selector-class">.kof-head-hp-0</span>&gt;<span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#kof</span>&gt;<span class="selector-class">.kof-head</span>&gt;<span class="selector-class">.kof-head-hp-1</span>&gt;<span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#kof</span>&gt;<span class="selector-class">.kof-head</span>&gt;<span class="selector-class">.kof-head-hp-0</span>&gt;<span class="selector-tag">div</span>&gt;<span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: lightgreen;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#kof</span>&gt;<span class="selector-class">.kof-head</span>&gt;<span class="selector-class">.kof-head-hp-1</span>&gt;<span class="selector-tag">div</span>&gt;<span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: lightgreen;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="计时器效果"><a href="#计时器效果" class="headerlink" title="计时器效果"></a>计时器效果</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"> <span class="variable language_">this</span>.<span class="property">time_left</span> -= <span class="variable language_">this</span>.<span class="property">timedelta</span>; <span class="comment">//更新剩余时间</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">time_left</span> &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">time_left</span> = <span class="number">0</span>;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">$time</span>.<span class="title function_">text</span>(<span class="built_in">parseInt</span>(<span class="variable language_">this</span>.<span class="property">time_left</span> / <span class="number">1000</span>));</span><br></pre></td></tr></table></figure><h3 id="游戏玩家类player实现"><a href="#游戏玩家类player实现" class="headerlink" title="游戏玩家类player实现"></a>游戏玩家类player实现</h3><h4 id="构造函数-1"><a href="#构造函数-1" class="headerlink" title="构造函数"></a>构造函数</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">constructor</span>(<span class="params">root, info</span>) &#123;</span><br><span class="line">        <span class="variable language_">super</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">root</span> = root;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">id</span> = info.<span class="property">id</span>; <span class="comment">//角色id，用于区分角色</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">x</span> = info.<span class="property">x</span>; <span class="comment">//横坐标</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">y</span> = info.<span class="property">y</span>; <span class="comment">//纵坐标</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">width</span> = info.<span class="property">width</span>; <span class="comment">//宽度</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">height</span> = info.<span class="property">height</span>; <span class="comment">//高度 </span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">color</span> = info.<span class="property">color</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">vx</span> = <span class="number">0</span>; <span class="comment">// 水平方向速度</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">vy</span> = <span class="number">0</span>; <span class="comment">// 竖直方向速度</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span> = <span class="variable language_">this</span>.<span class="property">root</span>.<span class="property">game_map</span>.<span class="property">ctx</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">speedx</span> = <span class="number">400</span>; <span class="comment">//水平速度</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">speedy</span> = -<span class="number">1000</span>; <span class="comment">//跳跃初始速度</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">direction</span> = <span class="number">1</span>; <span class="comment">//角色朝向</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">gravity</span> = <span class="number">50</span>; <span class="comment">//重力</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">status</span> = <span class="number">3</span>; <span class="comment">// 0：静止, 1：向前，2：向后， 3：跳跃，4：攻击，5：被打，6：死亡</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">press_keys</span> = <span class="variable language_">this</span>.<span class="property">root</span>.<span class="property">game_map</span>.<span class="property">controller</span>.<span class="property">pressed_keys</span>; <span class="comment">// 从控制器中取键位</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">animations</span> = <span class="keyword">new</span> <span class="title class_">Map</span>(); <span class="comment">// 每一个状态动作存入map</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">frame_current_cnt</span> = <span class="number">0</span>; <span class="comment">//当前记录了多少帧</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">hp</span> = <span class="number">100</span>; <span class="comment">//角色血量</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$hp</span> = <span class="variable language_">this</span>.<span class="property">root</span>.<span class="property">$kof</span>.<span class="title function_">find</span>(<span class="string">`.kof-head-hp-<span class="subst">$&#123;<span class="variable language_">this</span>.id&#125;</span>&gt;div`</span>) <span class="comment">//获取血条</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$hp_div</span> = <span class="variable language_">this</span>.<span class="property">$hp</span>.<span class="title function_">find</span>(<span class="string">`div`</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="移动函数uppdate-move"><a href="#移动函数uppdate-move" class="headerlink" title="移动函数uppdate_move"></a>移动函数uppdate_move</h4><h5 id="实现角色的降落效果"><a href="#实现角色的降落效果" class="headerlink" title="实现角色的降落效果"></a>实现角色的降落效果</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"> <span class="variable language_">this</span>.<span class="property">vy</span> += <span class="variable language_">this</span>.<span class="property">gravity</span>; <span class="comment">//每秒中加上一个重力加速度</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">x</span> += <span class="variable language_">this</span>.<span class="property">vx</span> * <span class="variable language_">this</span>.<span class="property">timedelta</span> / <span class="number">1000</span>; <span class="comment">//距离方程，速度乘以时间，timedelta单位为ms，所以要除以1000</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">y</span> += <span class="variable language_">this</span>.<span class="property">vy</span> * <span class="variable language_">this</span>.<span class="property">timedelta</span> / <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">y</span> &gt; <span class="number">450</span>) &#123; <span class="comment">//实现角色降落停在地面</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">y</span> = <span class="number">450</span>;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">vy</span> = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">status</span> === <span class="number">3</span>) <span class="variable language_">this</span>.<span class="property">status</span> = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h4 id="控制函数update-control"><a href="#控制函数update-control" class="headerlink" title="控制函数update_control"></a>控制函数update_control</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">update_control</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> w, a, d, j; <span class="comment">// 跳跃，向左，向右，攻击</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">id</span> === <span class="number">0</span>) &#123;</span><br><span class="line">            w = <span class="variable language_">this</span>.<span class="property">press_keys</span>.<span class="title function_">has</span>(<span class="string">&#x27;w&#x27;</span>);</span><br><span class="line">            a = <span class="variable language_">this</span>.<span class="property">press_keys</span>.<span class="title function_">has</span>(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">            d = <span class="variable language_">this</span>.<span class="property">press_keys</span>.<span class="title function_">has</span>(<span class="string">&#x27;d&#x27;</span>);</span><br><span class="line">            j = <span class="variable language_">this</span>.<span class="property">press_keys</span>.<span class="title function_">has</span>(<span class="string">&#x27;j&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            w = <span class="variable language_">this</span>.<span class="property">press_keys</span>.<span class="title function_">has</span>(<span class="string">&#x27;ArrowUp&#x27;</span>);</span><br><span class="line">            a = <span class="variable language_">this</span>.<span class="property">press_keys</span>.<span class="title function_">has</span>(<span class="string">&#x27;ArrowLeft&#x27;</span>);</span><br><span class="line">            d = <span class="variable language_">this</span>.<span class="property">press_keys</span>.<span class="title function_">has</span>(<span class="string">&#x27;ArrowRight&#x27;</span>);</span><br><span class="line">            j = <span class="variable language_">this</span>.<span class="property">press_keys</span>.<span class="title function_">has</span>(<span class="string">&#x27;Enter&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">status</span> === <span class="number">0</span> || <span class="variable language_">this</span>.<span class="property">status</span> === <span class="number">1</span>) &#123; <span class="comment">//静止状态和移动状态下才能进行其他的一些操作</span></span><br><span class="line">            <span class="keyword">if</span> (j) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">status</span> = <span class="number">4</span>;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">vx</span> = <span class="number">0</span>;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">frame_current_cnt</span> = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (w) &#123;</span><br><span class="line">                <span class="keyword">if</span> (d) &#123;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">vx</span> = <span class="variable language_">this</span>.<span class="property">speedx</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(a) &#123;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">vx</span> = -<span class="variable language_">this</span>.<span class="property">speedx</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">vx</span> = <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">vy</span> = <span class="variable language_">this</span>.<span class="property">speedy</span>;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">status</span> = <span class="number">3</span>;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">frame_current_cnt</span> = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (d) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">vx</span> = <span class="variable language_">this</span>.<span class="property">speedx</span>;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">status</span> = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (a) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">vx</span> = -<span class="variable language_">this</span>.<span class="property">speedx</span>;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">status</span> = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">vx</span> = <span class="number">0</span>;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">status</span> = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>还要限制角色走出地图，在update_move函数中添加下面这段代码：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//限制角色走出地图</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">x</span> &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">x</span> = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">x</span> + <span class="variable language_">this</span>.<span class="property">width</span> &gt; <span class="variable language_">this</span>.<span class="property">root</span>.<span class="property">game_map</span>.<span class="property">$canvas</span>.<span class="title function_">width</span>())&#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">x</span> = <span class="variable language_">this</span>.<span class="property">root</span>.<span class="property">game_map</span>.<span class="property">$canvas</span>.<span class="title function_">width</span>() - <span class="variable language_">this</span>.<span class="property">width</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h4 id="渲染函数render"><a href="#渲染函数render" class="headerlink" title="渲染函数render"></a>渲染函数render</h4><h5 id="在canvas中使用gif"><a href="#在canvas中使用gif" class="headerlink" title="在canvas中使用gif"></a>在canvas中使用gif</h5><p>在js文件夹中新建一个utils文件夹，在里面新建一个gif.js文件，将封装好的代码放进去</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//基本使用方法</span></span><br><span class="line"><span class="keyword">var</span> myGif = <span class="title function_">GIF</span>();</span><br><span class="line">myGif.<span class="title function_">load</span>(<span class="string">&quot;GIFurl.gif&quot;</span>);</span><br><span class="line">ctx.<span class="title function_">drawImage</span>(myGif.<span class="property">frames</span>[<span class="number">0</span>].<span class="property">image</span>,<span class="number">0</span>,<span class="number">0</span>); <span class="comment">// draw frame 0 only.</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//渲染图片 </span></span><br><span class="line"><span class="keyword">let</span> k = <span class="built_in">parseInt</span>(<span class="variable language_">this</span>.<span class="property">frame_current_cnt</span> / obj.<span class="property">frame_rate</span>) % obj.<span class="property">frame_cnt</span>; <span class="comment">//当前第几帧</span></span><br><span class="line">                <span class="keyword">let</span> image = obj.<span class="property">gif</span>.<span class="property">frames</span>[k].<span class="property">image</span>; <span class="comment">//当前显示图片</span></span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="title function_">drawImage</span>(image, <span class="variable language_">this</span>.<span class="property">x</span>, <span class="variable language_">this</span>.<span class="property">y</span> + obj.<span class="property">offset_y</span>, image.<span class="property">width</span> * obj.<span class="property">scale</span>, image.<span class="property">height</span> * obj.<span class="property">scale</span>); <span class="comment">//画出图片</span></span><br><span class="line">                </span><br></pre></td></tr></table></figure><h4 id="实现两个角色对称"><a href="#实现两个角色对称" class="headerlink" title="实现两个角色对称"></a>实现两个角色对称</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">update_direction</span>(<span class="params"></span>) &#123; </span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">status</span> === <span class="number">6</span>) <span class="keyword">return</span>; <span class="comment">//如果角色死亡就不再有方向</span></span><br><span class="line">        <span class="keyword">let</span> players = <span class="variable language_">this</span>.<span class="property">root</span>.<span class="property">players</span>;</span><br><span class="line">        <span class="keyword">if</span> (players[<span class="number">0</span>] &amp;&amp; players[<span class="number">1</span>]) &#123;</span><br><span class="line">            <span class="keyword">let</span> me = <span class="variable language_">this</span>;</span><br><span class="line">            <span class="keyword">let</span> you = players[<span class="number">1</span> - <span class="variable language_">this</span>.<span class="property">id</span>];</span><br><span class="line">            <span class="keyword">if</span> (me.<span class="property">x</span> &lt; you.<span class="property">x</span>) &#123;</span><br><span class="line">                me.<span class="property">direction</span> = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                me.<span class="property">direction</span> = -<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//在render中渲染出来</span></span><br><span class="line"> <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="title function_">save</span>();</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="title function_">scale</span>(-<span class="number">1</span>, <span class="number">1</span>); <span class="comment">//翻转x轴坐标</span></span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="title function_">translate</span>(-<span class="variable language_">this</span>.<span class="property">root</span>.<span class="property">game_map</span>.<span class="property">$canvas</span>.<span class="title function_">width</span>(), <span class="number">0</span>); <span class="comment">//朝负方向平移</span></span><br><span class="line">                <span class="keyword">let</span> k = <span class="built_in">parseInt</span>(<span class="variable language_">this</span>.<span class="property">frame_current_cnt</span> / obj.<span class="property">frame_rate</span>) % obj.<span class="property">frame_cnt</span>; </span><br><span class="line">                <span class="keyword">let</span> image = obj.<span class="property">gif</span>.<span class="property">frames</span>[k].<span class="property">image</span>; </span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="title function_">drawImage</span>(image, <span class="variable language_">this</span>.<span class="property">root</span>.<span class="property">game_map</span>.<span class="property">$canvas</span>.<span class="title function_">width</span>() - <span class="variable language_">this</span>.<span class="property">x</span> - <span class="variable language_">this</span>.<span class="property">width</span>, <span class="variable language_">this</span>.<span class="property">y</span> + obj.<span class="property">offset_y</span>, image.<span class="property">width</span> * obj.<span class="property">scale</span>, image.<span class="property">height</span> * obj.<span class="property">scale</span>); <span class="comment">//画出图片               </span></span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="title function_">restore</span>();</span><br></pre></td></tr></table></figure><h4 id="碰撞检测函数is-collision"><a href="#碰撞检测函数is-collision" class="headerlink" title="碰撞检测函数is_collision"></a>碰撞检测函数is_collision</h4><p>在游戏中一般使用一个简单图形来代替角色，然后判断两个图形是否有交集，就能实现碰撞检测。两个矩阵水平方向和竖直方向都有交集，就意味着两个矩阵有交集。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">is_collision</span>(<span class="params">r1, r2</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title class_">Math</span>.<span class="title function_">max</span>(r1.<span class="property">x1</span>, r2.<span class="property">x1</span>) &gt; <span class="title class_">Math</span>.<span class="title function_">min</span>(r1.<span class="property">x2</span>, r2.<span class="property">x2</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title class_">Math</span>.<span class="title function_">max</span>(r1.<span class="property">y1</span>, r2.<span class="property">y1</span>) &gt; <span class="title class_">Math</span>.<span class="title function_">min</span>(r1.<span class="property">y2</span>, r2.<span class="property">y2</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="被攻击函数is-attacked"><a href="#被攻击函数is-attacked" class="headerlink" title="被攻击函数is_attacked"></a>被攻击函数is_attacked</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">is_atacked</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">status</span> === <span class="number">6</span>) <span class="keyword">return</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">status</span> = <span class="number">5</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">frame_current_cnt</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">hp</span> = <span class="title class_">Math</span>.<span class="title function_">max</span>(<span class="variable language_">this</span>.<span class="property">hp</span> - <span class="number">10</span>, <span class="number">0</span>); <span class="comment">//没被攻击一次减少百分之10血</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">hp</span> &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">status</span> = <span class="number">6</span>;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">frame_current_cnt</span> = <span class="number">0</span>;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">vx</span> = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$hp_div</span>.<span class="title function_">animate</span>(&#123; <span class="comment">//实现血条渐变</span></span><br><span class="line">            width :<span class="variable language_">this</span>.<span class="property">$hp</span>.<span class="title function_">parent</span>().<span class="title function_">width</span>() * <span class="variable language_">this</span>.<span class="property">hp</span> / <span class="number">100</span></span><br><span class="line">        &#125;, <span class="number">300</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$hp</span>.<span class="title function_">animate</span>(&#123;</span><br><span class="line">            width :<span class="variable language_">this</span>.<span class="property">$hp</span>.<span class="title function_">parent</span>().<span class="title function_">width</span>() * <span class="variable language_">this</span>.<span class="property">hp</span> / <span class="number">100</span></span><br><span class="line">        &#125;, <span class="number">500</span>);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="攻击函数update-attavked"><a href="#攻击函数update-attavked" class="headerlink" title="攻击函数update_attavked"></a>攻击函数update_attavked</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">update_attacked</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">status</span> === <span class="number">4</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">frame_current_cnt</span> === <span class="number">18</span>) &#123;</span><br><span class="line">            <span class="keyword">let</span> me = <span class="variable language_">this</span>;</span><br><span class="line">            <span class="keyword">let</span> you = <span class="variable language_">this</span>.<span class="property">root</span>.<span class="property">players</span>[<span class="number">1</span> - <span class="variable language_">this</span>.<span class="property">id</span>];</span><br><span class="line">            <span class="keyword">let</span> r1;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">direction</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                r1 = &#123;</span><br><span class="line">                    <span class="attr">x1</span>: me.<span class="property">x</span> + <span class="number">120</span>,</span><br><span class="line">                    <span class="attr">y1</span>: me.<span class="property">y</span> + <span class="number">30</span>,</span><br><span class="line">                    <span class="attr">x2</span>: me.<span class="property">x</span> + <span class="number">120</span> + <span class="number">100</span>,</span><br><span class="line">                    <span class="attr">y2</span>: me.<span class="property">y</span> + <span class="number">30</span> + <span class="number">25</span>,</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                r1 = &#123;</span><br><span class="line">                    <span class="attr">x1</span>: me.<span class="property">x</span> + me.<span class="property">width</span> - <span class="number">120</span> - <span class="number">100</span>,</span><br><span class="line">                    <span class="attr">y1</span>: me.<span class="property">y</span> + <span class="number">30</span>,</span><br><span class="line">                    <span class="attr">x2</span>: me.<span class="property">x</span> + me.<span class="property">width</span> - <span class="number">120</span>,</span><br><span class="line">                    <span class="attr">y2</span>: me.<span class="property">y</span> + <span class="number">30</span> + <span class="number">25</span>,</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">let</span> r2 = &#123;</span><br><span class="line">                <span class="attr">x1</span>: you.<span class="property">x</span>,</span><br><span class="line">                <span class="attr">y1</span>: you.<span class="property">y</span>,</span><br><span class="line">                <span class="attr">x2</span>: you.<span class="property">x</span> + you.<span class="property">width</span>,</span><br><span class="line">                <span class="attr">y2</span>: you.<span class="property">y</span> + you.<span class="property">height</span>,</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="title function_">is_collision</span>(r1, r2)) &#123;</span><br><span class="line">                you.<span class="title function_">is_atacked</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="控制器类controller实现"><a href="#控制器类controller实现" class="headerlink" title="控制器类controller实现"></a>控制器类controller实现</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">Controller</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">$canvas</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$canvas</span> = $canvas;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">pressed_keys</span> = <span class="keyword">new</span> <span class="title class_">Set</span>(); <span class="comment">//键位会重复按很多次，所以用set存储比较好，set可以判重</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">start</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">start</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> outer = <span class="variable language_">this</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$canvas</span>.<span class="title function_">keydown</span>(<span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            outer.<span class="property">pressed_keys</span>.<span class="title function_">add</span>(e.<span class="property">key</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$canvas</span>.<span class="title function_">keyup</span>(<span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            outer.<span class="property">pressed_keys</span>.<span class="title function_">delete</span>(e.<span class="property">key</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="草稚京类kyo实现"><a href="#草稚京类kyo实现" class="headerlink" title="草稚京类kyo实现"></a>草稚京类kyo实现</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">Kyo</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Player</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">root, info</span>) &#123;</span><br><span class="line">        <span class="variable language_">super</span>(root, info);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">init_animations</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//初始化动画</span></span><br><span class="line">    <span class="title function_">init_animations</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> outer = <span class="variable language_">this</span>;</span><br><span class="line">        <span class="keyword">let</span> offsets = [<span class="number">0</span>, -<span class="number">22</span>, -<span class="number">22</span>, -<span class="number">140</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>]; <span class="comment">// 设置各个gif的偏移量</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">7</span>; i ++) &#123;</span><br><span class="line">            <span class="keyword">let</span> gif = <span class="title function_">GIF</span>();</span><br><span class="line">            gif.<span class="title function_">load</span>(<span class="string">`/static/images/player/kyo/<span class="subst">$&#123;i&#125;</span>.gif`</span>); <span class="comment">//加载图片</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">animations</span>.<span class="title function_">set</span>(i, &#123;</span><br><span class="line">                <span class="attr">gif</span>: gif,</span><br><span class="line">                <span class="attr">frame_cnt</span>: <span class="number">0</span>,<span class="comment">// 总图片数</span></span><br><span class="line">                <span class="attr">frame_rate</span>: <span class="number">12</span>, <span class="comment">// 每秒刷帧的速率</span></span><br><span class="line">                <span class="attr">offset_y</span>: offsets[i], <span class="comment">// y方向偏移量</span></span><br><span class="line">                <span class="attr">loaded</span>: <span class="literal">false</span>, <span class="comment">// 是否加载完整</span></span><br><span class="line">                <span class="attr">scale</span>: <span class="number">2</span>, <span class="comment">// 放大多少倍</span></span><br><span class="line">            &#125;);</span><br><span class="line">            gif.<span class="property">onload</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">let</span> obj = outer.<span class="property">animations</span>.<span class="title function_">get</span>(i);</span><br><span class="line">                obj.<span class="property">frame_cnt</span> = gif.<span class="property">frames</span>.<span class="property">length</span>;</span><br><span class="line">                obj.<span class="property">loaded</span> = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">if</span> (i === <span class="number">3</span>) &#123;</span><br><span class="line">                    obj.<span class="property">frame_rate</span> = <span class="number">4</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="项目效果图"><a href="#项目效果图" class="headerlink" title="项目效果图"></a>项目效果图</h3><p><img src="https://s3.bmp.ovh/imgs/2022/05/12/ceeb6b538915dd05.png"></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
            <tag> css </tag>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>创建游戏界面</title>
      <link href="/2022/05/08/3.%E5%88%9B%E5%BB%BA%E6%B8%B8%E6%88%8F%E7%95%8C%E9%9D%A2/"/>
      <url>/2022/05/08/3.%E5%88%9B%E5%BB%BA%E6%B8%B8%E6%88%8F%E7%95%8C%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<h3 id="简易游戏引擎实现"><a href="#简易游戏引擎实现" class="headerlink" title="简易游戏引擎实现"></a>简易游戏引擎实现</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable constant_">AC_GAME_OBJECTS</span> = []; <span class="comment">// 储存所有可以“动”的元素的全局数组</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AcGameObject</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable constant_">AC_GAME_OBJECTS</span>.<span class="title function_">push</span>(<span class="variable language_">this</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">has_called_start</span> = <span class="literal">false</span>;<span class="comment">// 是否执行过start函数</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">timedelta</span> = <span class="number">0</span>; <span class="comment">// 当前帧距离上一帧的时间间隔</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">start</span>(<span class="params"></span>) &#123;<span class="comment">// 只会在第一帧执行一次</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">update</span>(<span class="params"></span>) &#123;<span class="comment">// 每一帧都执行</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">on_destroy</span>(<span class="params"></span>) &#123;<span class="comment">// 在销毁之前执行一次</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">destroy</span>(<span class="params"></span>) &#123;<span class="comment">// 删掉该物体</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">on_destroy</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="variable constant_">AC_GAME_OBJECTS</span>.<span class="property">length</span>; i ++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable constant_">AC_GAME_OBJECTS</span>[i] === <span class="variable language_">this</span>) &#123;</span><br><span class="line">                <span class="variable constant_">AC_GAME_OBJECTS</span>.<span class="title function_">splice</span>(i, <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> last_timestamp;</span><br><span class="line"><span class="keyword">let</span> <span class="variable constant_">AC_GAME_ANIMATION</span> = <span class="keyword">function</span> (<span class="params">timestamp</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="variable constant_">AC_GAME_OBJECTS</span>.<span class="property">length</span>; i ++) &#123;</span><br><span class="line">        <span class="keyword">let</span> obj = <span class="variable constant_">AC_GAME_OBJECTS</span>[i];<span class="comment">// 当前物体</span></span><br><span class="line">        <span class="keyword">if</span> (!obj.<span class="property">has_called_start</span>) &#123; <span class="comment">// 如果没有执行过第一帧</span></span><br><span class="line">            obj.<span class="title function_">start</span>();</span><br><span class="line">            obj.<span class="property">has_called_start</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            obj.<span class="property">timedelta</span> = timestamp - last_timestamp; <span class="comment">// 记录两帧之间时间间隔</span></span><br><span class="line">            obj.<span class="title function_">update</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    last_timestamp = timestamp; <span class="comment">// 更新下上一帧时间戳</span></span><br><span class="line">    <span class="title function_">requestAnimationFrame</span>(<span class="variable constant_">AC_GAME_ANIMATION</span>); <span class="comment">//如果想在浏览器下次重绘之前继续更新下一帧动画，那么回调函数自身必须再次调用</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="title function_">requestAnimationFrame</span>(<span class="variable constant_">AC_GAME_ANIMATION</span>);<span class="comment">// 该函数会在下次浏览器刷新页面之前执行一次，通常会用递归写法使其每秒执行60次func函数。调用时会传入一个参数，表示函数执行的时间戳，单位为毫秒。</span></span><br></pre></td></tr></table></figure><h3 id="创建游戏地图"><a href="#创建游戏地图" class="headerlink" title="创建游戏地图"></a>创建游戏地图</h3><p>主要使用canvas画布进行渲染</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">GameMap</span> <span class="keyword">extends</span> <span class="title class_ inherited__">AcGameObject</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">playground</span>) &#123;</span><br><span class="line">        <span class="variable language_">super</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">playground</span> = playground;<span class="comment">// 这个map是playground的</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$canvas</span> = $(<span class="string">`&lt;canvas&gt;&lt;/canvas&gt;`</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span> = <span class="variable language_">this</span>.<span class="property">$canvas</span>[<span class="number">0</span>].<span class="title function_">getContext</span>(<span class="string">&#x27;2d&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="property">canvas</span>.<span class="property">width</span> = <span class="variable language_">this</span>.<span class="property">playground</span>.<span class="property">width</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="property">canvas</span>.<span class="property">height</span> = <span class="variable language_">this</span>.<span class="property">playground</span>.<span class="property">height</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">playground</span>.<span class="property">$playground</span>.<span class="title function_">append</span>(<span class="variable language_">this</span>.<span class="property">$canvas</span>); <span class="comment">//将canvas加入到playground中</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">start</span>(<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">update</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">render</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">render</span>(<span class="params"></span>) &#123; <span class="comment">//渲染</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="property">fillStyle</span> = <span class="string">&quot;rgba(0, 0, 0, 0.2)&quot;</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="title function_">fillRect</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="property">canvas</span>.<span class="property">width</span>, <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="property">canvas</span>.<span class="property">height</span>);<span class="comment">// 画一个矩形</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="玩家类实现"><a href="#玩家类实现" class="headerlink" title="玩家类实现"></a>玩家类实现</h3><h4 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">constructor</span>(<span class="params">playground, x, y, radius, color, speed, is_me</span>) &#123;</span><br><span class="line">        <span class="variable language_">super</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">x</span> = x; <span class="comment">//横坐标</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">y</span> = y; <span class="comment">// 纵坐标</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">vx</span> = <span class="number">0</span>; <span class="comment">// 水平速度</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">vy</span> = <span class="number">0</span>; <span class="comment">// 垂直速度</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">damage_x</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">damage_y</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">damage_speed</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">move_length</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">playground</span> = playground;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span> = <span class="variable language_">this</span>.<span class="property">playground</span>.<span class="property">game_map</span>.<span class="property">ctx</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">radius</span> = radius;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">color</span> = color;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">speed</span> = speed;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">is_me</span> = is_me;<span class="comment">// 是否是自己</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">eps</span> = <span class="number">0.1</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">friction</span> = <span class="number">0.9</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">spent_time</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">cur_skill</span> = <span class="literal">null</span>; <span class="comment">// 判断当前选择的技能</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="创建监听事件"><a href="#创建监听事件" class="headerlink" title="创建监听事件"></a>创建监听事件</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">add_listening_events</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> outer = <span class="variable language_">this</span>;</span><br><span class="line">        <span class="comment">// 关闭画布上的鼠标监听右键</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">playground</span>.<span class="property">game_map</span>.<span class="property">$canvas</span>.<span class="title function_">on</span>(<span class="string">&quot;contextmenu&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">playground</span>.<span class="property">game_map</span>.<span class="property">$canvas</span>.<span class="title function_">mousedown</span>(<span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (e.<span class="property">which</span> === <span class="number">3</span>) &#123; <span class="comment">// 鼠标右键</span></span><br><span class="line">                outer.<span class="title function_">move_to</span>(e.<span class="property">clientX</span>, e.<span class="property">clientY</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (e.<span class="property">which</span> === <span class="number">1</span>) &#123; <span class="comment">// 鼠标左键</span></span><br><span class="line">                <span class="keyword">if</span> (outer.<span class="property">cur_skill</span> === <span class="string">&quot;fireball&quot;</span>) &#123; <span class="comment">// 火球技能</span></span><br><span class="line">                    outer.<span class="title function_">shoot_fireball</span>(e.<span class="property">clientX</span>, e.<span class="property">clientY</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                outer.<span class="property">cur_skill</span> = <span class="literal">null</span>;<span class="comment">// 释放完技能后清空</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        $(<span class="variable language_">window</span>).<span class="title function_">keydown</span>(<span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (e.<span class="property">which</span> === <span class="number">81</span>) &#123; <span class="comment">// 键盘Q键</span></span><br><span class="line">                outer.<span class="property">cur_skill</span> = <span class="string">&quot;fireball&quot;</span>;<span class="comment">// 当前技能是火球</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="实现玩家的移动"><a href="#实现玩家的移动" class="headerlink" title="实现玩家的移动"></a>实现玩家的移动</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">move_length</span> &lt; <span class="variable language_">this</span>.<span class="property">eps</span>) &#123; <span class="comment">// 如果移动距离小于这个数，就不再移动了</span></span><br><span class="line">               <span class="variable language_">this</span>.<span class="property">move_length</span> = <span class="number">0</span>;</span><br><span class="line">               <span class="variable language_">this</span>.<span class="property">vx</span> = <span class="variable language_">this</span>.<span class="property">vy</span> = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> moved = <span class="title class_">Math</span>.<span class="title function_">min</span>(<span class="variable language_">this</span>.<span class="property">move_length</span>, <span class="variable language_">this</span>.<span class="property">speed</span> * <span class="variable language_">this</span>.<span class="property">timedelta</span> / <span class="number">1000</span>);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">x</span> += <span class="variable language_">this</span>.<span class="property">vx</span> * moved;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">y</span> += <span class="variable language_">this</span>.<span class="property">vy</span> * moved;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">move_length</span> -= moved;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="实现发射火球"><a href="#实现发射火球" class="headerlink" title="实现发射火球"></a>实现发射火球</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">shoot_fireball</span>(<span class="params">tx, ty</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> x = <span class="variable language_">this</span>.<span class="property">x</span>;</span><br><span class="line">        <span class="keyword">let</span> y = <span class="variable language_">this</span>.<span class="property">y</span>;</span><br><span class="line">        <span class="keyword">let</span> radius = <span class="variable language_">this</span>.<span class="property">playground</span>.<span class="property">height</span> * <span class="number">0.01</span>;<span class="comment">// 火球半径</span></span><br><span class="line">        <span class="keyword">let</span> angle = <span class="title class_">Math</span>.<span class="title function_">atan2</span>(ty - <span class="variable language_">this</span>.<span class="property">y</span>, tx - <span class="variable language_">this</span>.<span class="property">x</span>);</span><br><span class="line">        <span class="keyword">let</span> vx = <span class="title class_">Math</span>.<span class="title function_">cos</span>(angle);</span><br><span class="line">        <span class="keyword">let</span> vy = <span class="title class_">Math</span>.<span class="title function_">sin</span>(angle);</span><br><span class="line">        <span class="keyword">let</span> color = <span class="string">&quot;orange&quot;</span>;</span><br><span class="line">        <span class="keyword">let</span> speed = <span class="variable language_">this</span>.<span class="property">playground</span>.<span class="property">height</span> * <span class="number">0.5</span>;</span><br><span class="line">        <span class="keyword">let</span> move_length = <span class="variable language_">this</span>.<span class="property">playground</span>.<span class="property">height</span> * <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">FireBall</span>(<span class="variable language_">this</span>.<span class="property">playground</span>, <span class="variable language_">this</span>, x, y, radius, vx, vy, color, speed, move_length, <span class="variable language_">this</span>.<span class="property">playground</span>.<span class="property">height</span> * <span class="number">0.01</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="实现被攻击效果"><a href="#实现被攻击效果" class="headerlink" title="实现被攻击效果"></a>实现被攻击效果</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">is_attacked</span>(<span class="params">angle, damage</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span> + <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">10</span>; i ++) &#123; <span class="comment">// 被击中后出现粒子效果</span></span><br><span class="line">            <span class="keyword">let</span> x = <span class="variable language_">this</span>.<span class="property">x</span>;</span><br><span class="line">            <span class="keyword">let</span> y = <span class="variable language_">this</span>.<span class="property">y</span>;</span><br><span class="line">            <span class="keyword">let</span> radius = <span class="variable language_">this</span>.<span class="property">radius</span> * <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">0.1</span>;</span><br><span class="line">            <span class="keyword">let</span> angle = <span class="title class_">Math</span>.<span class="property">PI</span> * <span class="number">2</span> * <span class="title class_">Math</span>.<span class="title function_">random</span>();</span><br><span class="line">            <span class="keyword">let</span> vx = <span class="title class_">Math</span>.<span class="title function_">cos</span>(angle);</span><br><span class="line">            <span class="keyword">let</span> vy = <span class="title class_">Math</span>.<span class="title function_">sin</span>(angle);</span><br><span class="line">            <span class="keyword">let</span> color = <span class="variable language_">this</span>.<span class="property">color</span>;</span><br><span class="line">            <span class="keyword">let</span> speed = <span class="variable language_">this</span>.<span class="property">speed</span> * <span class="number">10</span>;</span><br><span class="line">            <span class="keyword">let</span> move_length = <span class="variable language_">this</span>.<span class="property">radius</span> * <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">5</span>;</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Particle</span>(<span class="variable language_">this</span>.<span class="property">playground</span>, x, y, radius, vx, vy, color, speed, move_length);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">radius</span> -= damage;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">radius</span> &lt; <span class="number">10</span>) &#123; <span class="comment">// 小于10像素就死了</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">destroy</span>();</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">damage_x</span> = <span class="title class_">Math</span>.<span class="title function_">cos</span>(angle);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">damage_y</span> = <span class="title class_">Math</span>.<span class="title function_">sin</span>(angle);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">damage_speed</span> = damage * <span class="number">50</span>;<span class="comment">// 被攻击到会被击退</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">speed</span> *= <span class="number">1.5</span>; <span class="comment">// 被攻击后速度变快</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="实现人机攻击"><a href="#实现人机攻击" class="headerlink" title="实现人机攻击"></a>实现人机攻击</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">spent_time</span> += <span class="variable language_">this</span>.<span class="property">timedelta</span> / <span class="number">1000</span>;</span><br><span class="line">        <span class="comment">// 4秒过后才能发射，每5s就发射一次</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">is_me</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">spent_time</span> &gt; <span class="number">4</span> &amp;&amp; <span class="title class_">Math</span>.<span class="title function_">random</span>() &lt; <span class="number">1</span> / <span class="number">300.0</span>) &#123;</span><br><span class="line">            <span class="keyword">let</span> player = <span class="variable language_">this</span>.<span class="property">playground</span>.<span class="property">players</span>[<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="variable language_">this</span>.<span class="property">playground</span>.<span class="property">players</span>.<span class="property">length</span>)];<span class="comment">// 随机攻击目标</span></span><br><span class="line">            <span class="keyword">let</span> tx = player.<span class="property">x</span> + player.<span class="property">speed</span> * <span class="variable language_">this</span>.<span class="property">vx</span> * <span class="variable language_">this</span>.<span class="property">timedelta</span> / <span class="number">1000</span> * <span class="number">0.3</span>;</span><br><span class="line">            <span class="keyword">let</span> ty = player.<span class="property">y</span> + player.<span class="property">speed</span> * <span class="variable language_">this</span>.<span class="property">vy</span> * <span class="variable language_">this</span>.<span class="property">timedelta</span> / <span class="number">1000</span> * <span class="number">0.3</span>;</span><br><span class="line"></span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">shoot_fireball</span>(tx, ty);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="游戏地图类实现"><a href="#游戏地图类实现" class="headerlink" title="游戏地图类实现"></a>游戏地图类实现</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">AcGamePlayground</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">root</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">root</span> = root;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$playground</span> = $(<span class="string">`&lt;div class=&quot;ac-game-playground&quot;&gt;&lt;/div&gt;`</span>)</span><br><span class="line">        <span class="comment">//this.hide(); // 一开始打开的是菜单界面，所以playground界面要先关闭</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">root</span>.<span class="property">$ac_game</span>.<span class="title function_">append</span>(<span class="variable language_">this</span>.<span class="property">$playground</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">width</span> = <span class="variable language_">this</span>.<span class="property">$playground</span>.<span class="title function_">width</span>(); <span class="comment">//记录游戏背景宽度</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">height</span> = <span class="variable language_">this</span>.<span class="property">$playground</span>.<span class="title function_">height</span>(); <span class="comment">//记录游戏背景高度</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">game_map</span> = <span class="keyword">new</span> <span class="title class_">GameMap</span>(<span class="variable language_">this</span>); <span class="comment">// 创建地图</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">players</span> = []; <span class="comment">// 存放游戏玩家的数组</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">players</span>.<span class="title function_">push</span>(<span class="keyword">new</span> <span class="title class_">Player</span>(<span class="variable language_">this</span>, <span class="variable language_">this</span>.<span class="property">width</span> / <span class="number">2</span>, <span class="variable language_">this</span>.<span class="property">height</span> / <span class="number">2</span>, <span class="variable language_">this</span>.<span class="property">height</span> * <span class="number">0.05</span>, <span class="string">&quot;white&quot;</span>, <span class="variable language_">this</span>.<span class="property">height</span> * <span class="number">0.15</span>, <span class="literal">true</span>));<span class="comment">//创建一个游戏玩家</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i ++) &#123; <span class="comment">// 创建几个人机玩家</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">players</span>.<span class="title function_">push</span>(<span class="keyword">new</span> <span class="title class_">Player</span>(<span class="variable language_">this</span>, <span class="variable language_">this</span>.<span class="property">width</span> / <span class="number">2</span>, <span class="variable language_">this</span>.<span class="property">height</span> / <span class="number">2</span>, <span class="variable language_">this</span>.<span class="property">height</span> * <span class="number">0.05</span>, <span class="variable language_">this</span>.<span class="title function_">get_random_color</span>(), <span class="variable language_">this</span>.<span class="property">height</span> * <span class="number">0.15</span>, <span class="literal">false</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">start</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">start</span>(<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">show</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$playground</span>.<span class="title function_">show</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">hide</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$playground</span>.<span class="title function_">hide</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">get_random_color</span>(<span class="params"></span>) &#123; <span class="comment">// 随机颜色</span></span><br><span class="line">        <span class="keyword">let</span> colors = [<span class="string">&quot;blue&quot;</span>, <span class="string">&quot;pink&quot;</span>, <span class="string">&quot;orange&quot;</span>, <span class="string">&quot;purple&quot;</span>, <span class="string">&quot;green&quot;</span>];</span><br><span class="line">        <span class="keyword">return</span> colors[<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">5</span>)]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建火球类"><a href="#创建火球类" class="headerlink" title="创建火球类"></a>创建火球类</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">FireBall</span> <span class="keyword">extends</span> <span class="title class_ inherited__">AcGameObject</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">playground, player, x, y, radius, vx, vy, color, speed, move_length, damage</span>) &#123;</span><br><span class="line">        <span class="variable language_">super</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">playground</span> = playground;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">player</span> = player;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span> = <span class="variable language_">this</span>.<span class="property">playground</span>.<span class="property">game_map</span>.<span class="property">ctx</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">x</span> = x;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">y</span> = y;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">radius</span> = radius;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">vx</span> = vx;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">vy</span> = vy;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">color</span> = color;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">speed</span> = speed;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">move_length</span> = move_length;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">eps</span> = <span class="number">0.1</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">damage</span> = damage; <span class="comment">//伤害值</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">start</span>(<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">update</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">move_length</span> &lt; <span class="variable language_">this</span>.<span class="property">eps</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">destroy</span>();</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> moved = <span class="title class_">Math</span>.<span class="title function_">min</span>(<span class="variable language_">this</span>.<span class="property">move_length</span>, <span class="variable language_">this</span>.<span class="property">speed</span> * <span class="variable language_">this</span>.<span class="property">timedelta</span> / <span class="number">1000</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">x</span> += <span class="variable language_">this</span>.<span class="property">vx</span> * moved;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">y</span> += <span class="variable language_">this</span>.<span class="property">vy</span> * moved;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">move_length</span> -= moved;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="variable language_">this</span>.<span class="property">playground</span>.<span class="property">players</span>.<span class="property">length</span>; i ++) &#123;</span><br><span class="line">            <span class="keyword">let</span> player = <span class="variable language_">this</span>.<span class="property">playground</span>.<span class="property">players</span>[i];</span><br><span class="line">            <span class="comment">// 如果两个角色不一样，判断碰撞，并且攻击这个玩家</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">player</span> !== player &amp;&amp; <span class="variable language_">this</span>.<span class="title function_">is_collision</span>(player)) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">attack</span>(player);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">render</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">get_dis</span>(<span class="params">x1, y1, x2, y2</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> dx = x1 - x2;</span><br><span class="line">        <span class="keyword">let</span> dy = y1 - y2;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">sqrt</span>(dx * dx + dy * dy);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">is_collision</span>(<span class="params">player</span>) &#123; <span class="comment">// 碰撞检测</span></span><br><span class="line">        <span class="keyword">let</span> distance = <span class="variable language_">this</span>.<span class="title function_">get_dis</span>(<span class="variable language_">this</span>.<span class="property">x</span>, <span class="variable language_">this</span>.<span class="property">y</span>, player.<span class="property">x</span>, player.<span class="property">y</span>);<span class="comment">// 记录火球和玩家之间的距离</span></span><br><span class="line">        <span class="comment">// 如果距离小于玩家加上火球的半径，则已经碰撞</span></span><br><span class="line">        <span class="keyword">if</span> (distance &lt; <span class="variable language_">this</span>.<span class="property">radius</span> + player.<span class="property">radius</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">attack</span>(<span class="params">player</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> angle = <span class="title class_">Math</span>.<span class="title function_">atan2</span>(player.<span class="property">y</span> - <span class="variable language_">this</span>.<span class="property">y</span>, player.<span class="property">x</span> - <span class="variable language_">this</span>.<span class="property">x</span>);</span><br><span class="line">        player.<span class="title function_">is_attacked</span>(angle,<span class="variable language_">this</span>.<span class="property">damage</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">destroy</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="title function_">beginPath</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="title function_">arc</span>(<span class="variable language_">this</span>.<span class="property">x</span>, <span class="variable language_">this</span>.<span class="property">y</span>, <span class="variable language_">this</span>.<span class="property">radius</span>, <span class="number">0</span>, <span class="title class_">Math</span>.<span class="property">PI</span> * <span class="number">2</span>, <span class="literal">false</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="property">fillStyle</span> = <span class="variable language_">this</span>.<span class="property">color</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="title function_">fill</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="实现撞击后粒子效果"><a href="#实现撞击后粒子效果" class="headerlink" title="实现撞击后粒子效果"></a>实现撞击后粒子效果</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Particle</span> <span class="keyword">extends</span> <span class="title class_ inherited__">AcGameObject</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">playground, x, y, radius, vx, vy, color, speed, move_length</span>) &#123;</span><br><span class="line">        <span class="variable language_">super</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">playground</span> = playground;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">x</span> = x;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">y</span> = y;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">radius</span> = radius;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">vx</span> = vx;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">vy</span> = vy;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span> = <span class="variable language_">this</span>.<span class="property">playground</span>.<span class="property">game_map</span>.<span class="property">ctx</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">color</span> = color;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">speed</span> = speed;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">move_length</span> = move_length;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">friction</span> = <span class="number">0.9</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">eps</span> = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">start</span>(<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">update</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">move_length</span> &lt; <span class="variable language_">this</span>.<span class="property">eps</span> || <span class="variable language_">this</span>.<span class="property">speed</span> &lt; <span class="variable language_">this</span>.<span class="property">eps</span>) &#123; <span class="comment">// 如果小于这个值粒子就可以消失了</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">destroy</span>();</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> moved = <span class="title class_">Math</span>.<span class="title function_">min</span>(<span class="variable language_">this</span>.<span class="property">move_length</span>, <span class="variable language_">this</span>.<span class="property">speed</span> * <span class="variable language_">this</span>.<span class="property">timedelta</span> / <span class="number">1000</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">x</span> += <span class="variable language_">this</span>.<span class="property">vx</span> * moved;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">y</span> += <span class="variable language_">this</span>.<span class="property">vy</span> * moved;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">speed</span> *= <span class="variable language_">this</span>.<span class="property">friction</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">move_length</span> -= moved;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">render</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="title function_">beginPath</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="title function_">arc</span>(<span class="variable language_">this</span>.<span class="property">x</span>, <span class="variable language_">this</span>.<span class="property">y</span>, <span class="variable language_">this</span>.<span class="property">radius</span>, <span class="number">0</span>, <span class="title class_">Math</span>.<span class="property">PI</span> * <span class="number">2</span>, <span class="literal">false</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="property">fillStyle</span> = <span class="variable language_">this</span>.<span class="property">color</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="title function_">fill</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Django </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>创建菜单界面</title>
      <link href="/2022/05/05/2.%E5%88%9B%E5%BB%BA%E8%8F%9C%E5%8D%95%E7%95%8C%E9%9D%A2/"/>
      <url>/2022/05/05/2.%E5%88%9B%E5%BB%BA%E8%8F%9C%E5%8D%95%E7%95%8C%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<h3 id="页面HTML设计"><a href="#页面HTML设计" class="headerlink" title="页面HTML设计"></a>页面HTML设计</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% load static %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.acwing.com/static/jquery-ui-dist/jquery-ui.min.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.acwing.com/static/jquery/js/jquery-3.3.1.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&#123;% static &#x27;css/game.css&#x27; %&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;&#123;% static &#x27;js/dist/game.js&#x27; %&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">style</span>=<span class="string">&quot;margin: 0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;ac_game123&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">        &#123;#当dom tree加载完后显示代码#&#125;</span><br><span class="line">        $(document).ready(function () &#123;</span><br><span class="line">            let ac_game = new AcGame(&quot;ac_game123&quot;);</span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>引用css文件和JavaScript文件时可以用django的模板语言，如果用到<code>static</code>要在前面加上一个<code>&#123;% load static %&#125;</code>。HTML5申明最好去掉，后面渲染可能会出问题。</p><h3 id="编写视图函数"><a href="#编写视图函数" class="headerlink" title="编写视图函数"></a>编写视图函数</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&quot;multiends/web.html&quot;</span>)</span><br></pre></td></tr></table></figure><p>render()的语法如下:</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">render(request, template_name, context=<span class="literal">None</span>, content_type=<span class="literal">None</span>, status=<span class="literal">None</span>, using=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><p>render 的参数 request 和 template_name 是必需参数，其余的参数是可选参数。</p><ul><li>request：浏览器向服务器发送的请求对象，包含用户信息、请求内容和请求方式等。</li><li>template_name：设重模板文件名，用于生成网页内容。</li><li>context：对模板上下文（模板变量）赋值，以字典格式表示，默认情况下是一个空字典。</li><li>content_type：响应内容的数据格式，一般情况下使用默认值即可。</li><li>status：HTTP状态码，默认为200。</li><li>using：设置模板引擎，用于解析模板文件，生成网页内容。</li></ul><h3 id="路由配置"><a href="#路由配置" class="headerlink" title="路由配置"></a>路由配置</h3><p>首先在主路由中加入创建的应用程序的路由</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;admin/&#x27;</span>, admin.site.urls),</span><br><span class="line">    path(<span class="string">&#x27;&#x27;</span>, include(<span class="string">&#x27;game.urls.index&#x27;</span>)),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>然后再配置应用程序下的路由，并将其子文件夹的路由都加进来</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&quot;&quot;</span>, index, name=<span class="string">&quot;index&quot;</span>),</span><br><span class="line">    path(<span class="string">&quot;menu/&quot;</span>, include(<span class="string">&#x27;game.urls.menu.index&#x27;</span>)),</span><br><span class="line">    path(<span class="string">&quot;playground/&quot;</span>, include(<span class="string">&#x27;game.urls.playground.index&#x27;</span>)),</span><br><span class="line">    path(<span class="string">&quot;settings/&quot;</span>, include(<span class="string">&#x27;game.urls.settings.index&#x27;</span>)),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="JavaScript文件"><a href="#JavaScript文件" class="headerlink" title="JavaScript文件"></a>JavaScript文件</h3><h4 id="整体的js"><a href="#整体的js" class="headerlink" title="整体的js"></a>整体的js</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">AcGame</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">id</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">id</span> = id; <span class="comment">// 获取id</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$ac_game</span> = $(<span class="string">&#x27;#&#x27;</span> + id); <span class="comment">// 将div存入ac_game对象</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">menu</span> = <span class="keyword">new</span> <span class="title class_">AcGameMenu</span>(<span class="variable language_">this</span>);<span class="comment">// 创建菜单</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">playground</span> = <span class="keyword">new</span> <span class="title class_">AcGamePlayground</span>(<span class="variable language_">this</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">start</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">start</span>(<span class="params"></span>) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="menu的js"><a href="#menu的js" class="headerlink" title="menu的js"></a>menu的js</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">AcGameMenu</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">root</span>) &#123; <span class="comment">//root就是html里的那个ac_game对象</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">root</span> = root; <span class="comment">// 将对象信息保存</span></span><br><span class="line">        <span class="comment">// 如果是个html对象的话，变量加上$</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$menu</span> = $(<span class="string">`  </span></span><br><span class="line"><span class="string">        &lt;div class=&quot;ac-game-menu&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;ac-game-menu-field&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;div class=&quot;ac-game-menu-field-item ac-game-menu-field-item-single-mode&quot;&gt;</span></span><br><span class="line"><span class="string">                    单人模式</span></span><br><span class="line"><span class="string">                &lt;/div&gt;</span></span><br><span class="line"><span class="string">                &lt;br&gt;</span></span><br><span class="line"><span class="string">                &lt;div class=&quot;ac-game-menu-field-item ac-game-menu-field-item-multi-mode&quot;&gt;</span></span><br><span class="line"><span class="string">                    多人模式</span></span><br><span class="line"><span class="string">                &lt;/div&gt;</span></span><br><span class="line"><span class="string">                &lt;br&gt;</span></span><br><span class="line"><span class="string">                &lt;div class=&quot;ac-game-menu-field-item ac-game-menu-field-item-settings&quot;&gt;</span></span><br><span class="line"><span class="string">                    设置</span></span><br><span class="line"><span class="string">                &lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        `</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">root</span>.<span class="property">$ac_game</span>.<span class="title function_">append</span>(<span class="variable language_">this</span>.<span class="property">$menu</span>);<span class="comment">// 将$menu的html添加到ac_game中</span></span><br><span class="line">        <span class="comment">// find() 方法获得当前元素集合中每个元素的后代，通过选择器、jQuery 对象或元素来筛选。</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$single_mode</span> = <span class="variable language_">this</span>.<span class="property">$menu</span>.<span class="title function_">find</span>(<span class="string">&#x27;.ac-game-menu-field-item-single-mode&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$multi_mode</span> = <span class="variable language_">this</span>.<span class="property">$menu</span>.<span class="title function_">find</span>(<span class="string">&#x27;.ac-game-menu-field-item-multi-mode&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$settings</span> = <span class="variable language_">this</span>.<span class="property">$menu</span>.<span class="title function_">find</span>(<span class="string">&#x27;.ac-game-menu-field-item-settings&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">start</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">start</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">add_listening_events</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">add_listening_events</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> outer = <span class="variable language_">this</span>; <span class="comment">// 将外部的this存下来</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$single_mode</span>.<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123; <span class="comment">// 被点击就调用函数</span></span><br><span class="line">            outer.<span class="title function_">hide</span>(); <span class="comment">//关闭当前界面</span></span><br><span class="line">            outer.<span class="property">root</span>.<span class="property">playground</span>.<span class="title function_">show</span>(); <span class="comment">//显示游戏界面</span></span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$multi_mode</span>.<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;click multi mode&quot;</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$settings</span>.<span class="title function_">click</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;click settings&quot;</span>)</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">show</span>(<span class="params"></span>) &#123; <span class="comment">// 显示menu界面</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$menu</span>.<span class="title function_">show</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">hide</span>(<span class="params"></span>) &#123; <span class="comment">// 关闭menu界面</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$menu</span>.<span class="title function_">hide</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CSS文件"><a href="#CSS文件" class="headerlink" title="CSS文件"></a>CSS文件</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.ac-game-menu</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;/static/images/menu/background.gif&quot;</span>);</span><br><span class="line">    <span class="comment">/*填充整个图片*/</span></span><br><span class="line">    <span class="attribute">background-size</span>: <span class="number">100%</span> <span class="number">100%</span>;</span><br><span class="line">    user-select: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ac-game-menu-field</span> &#123;</span><br><span class="line">    <span class="comment">/*百分比设置*/</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">20vw</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">40vh</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">19vw</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ac-game-menu-field-item</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">7vh</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">18vw</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">6vh</span>;</span><br><span class="line">    <span class="attribute">font-style</span>: italic;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">2vh</span>;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">39</span>, <span class="number">21</span>, <span class="number">28</span>, <span class="number">0.6</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="comment">/*字间距*/</span></span><br><span class="line">    <span class="attribute">letter-spacing</span>: <span class="number">0.5vw</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ac-game-menu-field-item</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="comment">/*大小乘以1.2*/</span></span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.2</span>);</span><br><span class="line">    <span class="attribute">transition</span>: <span class="number">100ms</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="菜单界面效果显示"><a href="#菜单界面效果显示" class="headerlink" title="菜单界面效果显示"></a>菜单界面效果显示</h3><p><img src="https://s3.bmp.ovh/imgs/2022/05/07/7e9e784a0adb28b8.png"></p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Django </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>项目创建</title>
      <link href="/2022/05/05/1.%E9%A1%B9%E7%9B%AE%E5%88%9B%E5%BB%BA/"/>
      <url>/2022/05/05/1.%E9%A1%B9%E7%9B%AE%E5%88%9B%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h3 id="项目创建"><a href="#项目创建" class="headerlink" title="项目创建"></a>项目创建</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">django-admin startproject xxxxxxxx</span><br></pre></td></tr></table></figure><h3 id="项目运行"><a href="#项目运行" class="headerlink" title="项目运行"></a>项目运行</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python3 manager.py runserver <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">8000</span></span><br></pre></td></tr></table></figure><h3 id="项目设置"><a href="#项目设置" class="headerlink" title="项目设置"></a>项目设置</h3><h4 id="将自己的ip地址放进setting-py中"><a href="#将自己的ip地址放进setting-py中" class="headerlink" title="将自己的ip地址放进setting.py中"></a>将自己的ip地址放进setting.py中</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ALLOWED_HOSTS = [<span class="string">&quot;124.71.60.207&quot;</span>]</span><br></pre></td></tr></table></figure><h4 id="创建一个新的应用程序"><a href="#创建一个新的应用程序" class="headerlink" title="创建一个新的应用程序"></a>创建一个新的应用程序</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python3 manager.py startapp xxxxxxx</span><br></pre></td></tr></table></figure><h5 id="在setting-py中注册新的应用程序"><a href="#在setting-py中注册新的应用程序" class="headerlink" title="在setting.py中注册新的应用程序"></a>在setting.py中注册新的应用程序</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">INSTALLED_APPS = [<span class="string">&#x27;game.apps.GameConfig&#x27;</span>,]</span><br></pre></td></tr></table></figure><h4 id="同步数据库修改"><a href="#同步数据库修改" class="headerlink" title="同步数据库修改"></a>同步数据库修改</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python3 manager.py migrate</span><br></pre></td></tr></table></figure><h4 id="创建超级用户"><a href="#创建超级用户" class="headerlink" title="创建超级用户"></a>创建超级用户</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python3 manager.py createsuperuser</span><br></pre></td></tr></table></figure><h3 id="配置setting-py"><a href="#配置setting-py" class="headerlink" title="配置setting.py"></a>配置setting.py</h3><p>在<code>setting.py</code>最下面</p><h4 id="存放开发者文件"><a href="#存放开发者文件" class="headerlink" title="存放开发者文件"></a>存放开发者文件</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">STATIC_ROOT = os.path.join(BASE_DIR, <span class="string">&#x27;static&#x27;</span>)</span><br><span class="line">STATIC_URL = <span class="string">&#x27;/static/&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="存放用户文件"><a href="#存放用户文件" class="headerlink" title="存放用户文件"></a>存放用户文件</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">MEDIA_ROOT = os.path.join(BASE_DIR, <span class="string">&#x27;media&#x27;</span>)</span><br><span class="line">MEDIA_URL = <span class="string">&#x27;/media/&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="Django项目结构"><a href="#Django项目结构" class="headerlink" title="Django项目结构"></a>Django项目结构</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">mysite/</span><br><span class="line">    manage.py</span><br><span class="line">    mysite/</span><br><span class="line">        __init__.py</span><br><span class="line">        settings.py</span><br><span class="line">        urls.py</span><br><span class="line">        asgi.py</span><br><span class="line">        wsgi.py</span><br></pre></td></tr></table></figure><ul><li><code>manage.py</code>：一个命令行实用程序，可以各种方式与此 Django 项目进行交互。</li><li><code>settings.py</code>：此 Django 项目的设置&#x2F;配置。 <a href="https://docs.djangoproject.com/en/3.2/topics/settings/">Django 设置</a>会告诉你设置是如何工作的。</li><li><code>urls.py</code>：这个 Django 项目的 URL 声明；由 Django 驱动的站点的“目录”。<a href="https://docs.djangoproject.com/en/3.2/topics/http/urls/">可以在URL dispatcher</a>中阅读有关 URL 的更多信息。</li><li><code>asgi.py</code>：为项目提供服务的兼容 ASGI 的 Web 服务器的入口点。有关更多详细信息，请参阅<a href="https://docs.djangoproject.com/en/3.2/howto/deployment/asgi/">如何使用 ASGI</a>进行部署。</li><li><code>wsgi.py</code>: 为项目提供服务的 WSGI 兼容 Web 服务器的入口点。有关更多详细信息，请参阅<a href="https://docs.djangoproject.com/en/3.2/howto/deployment/wsgi/">如何使用 WSGI</a>进行部署。</li><li><code>views.py</code>: 存放各种模块。</li><li><code>models.py</code>:存放数据库类。</li><li><code>templates</code>:管理所有的HTML文件。</li></ul><h3 id="项目整体结构"><a href="#项目整体结构" class="headerlink" title="项目整体结构"></a>项目整体结构</h3><p><strong>如果文件夹下是存放python文件，那么每个文件夹下都要创建一个</strong><code>__init__.py</code><strong>文件</strong></p><p><img src="https://s3.bmp.ovh/imgs/2022/05/07/18cf946934a0b2c3.png"></p><h3 id="项目模块"><a href="#项目模块" class="headerlink" title="项目模块"></a>项目模块</h3><ol><li>单人模式</li><li>多人模式</li><li>设置</li></ol><h3 id="项目界面"><a href="#项目界面" class="headerlink" title="项目界面"></a>项目界面</h3><ol><li>菜单界面</li><li>对战界面</li><li>设置界面</li></ol>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
